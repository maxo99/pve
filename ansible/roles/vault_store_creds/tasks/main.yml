---
- name: Verify required variables
  ansible.builtin.assert:
    that:
      - vault_root_token is defined
      - vault_root_token != ""
      - token_id is defined
      - api_token_file_path is defined
      - vault_url_path is defined
    fail_msg: |
      ERROR: Required variables are not properly configured.
      Required variables:
      - vault_root_token
      - token_id
      - api_token_file_path
      - vault_url_path

- name: Check if API token file exists locally
  ansible.builtin.stat:
    path: "{{ api_token_file_path }}"
  delegate_to: localhost
  register: token_file_stat

- name: Read API token from local file
  ansible.builtin.slurp:
    src: "{{ api_token_file_path }}"
  delegate_to: localhost
  register: api_token_content
  when: token_file_stat.stat.exists

- name: Extract token value
  ansible.builtin.set_fact:
    api_token_value: "{{ api_token_content.content | b64decode | trim }}"
  when: token_file_stat.stat.exists

- name: Check Vault status
  ansible.builtin.uri:
    url: "{{ vault_addr }}/v1/sys/health"
    method: GET
  register: vault_status

- name: Verify Vault is ready
  ansible.builtin.assert:
    that:
      - vault_status.status == 200
    fail_msg: |
      ERROR: Vault is not ready. Status: {{ vault_status.status }}
      Please ensure Vault is initialized and unsealed.

- name: Store Proxmox API credentials in Vault
  ansible.builtin.uri:
    url: "{{ vault_url_path }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_root_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      data:
        token_id: "{{ token_id }}"
        token_secret: "{{ api_token_value }}"
    status_code: [200, 204]
  when: 
    - token_file_stat.stat.exists
    - api_token_value is defined
  register: vault_store_result

- name: Display success message
  ansible.builtin.debug:
    msg: |
      ================================
      PROXMOX API CREDENTIALS STORED
      ================================
      
      Token ID: {{ token_id }}
      Vault Path: {{ vault_url_path }}
      
  when: vault_store_result is succeeded

- name: Handle missing token file
  ansible.builtin.debug:
    msg: |
      ================================
      WARNING: API TOKEN FILE NOT FOUND
      ================================
      
      Expected file: {{ api_token_file_path }}
      
      Please ensure the API token has been generated and saved to this file.
      You can run the pve_add_users role to generate the token first.
  when: not token_file_stat.stat.exists
