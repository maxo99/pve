#!/bin/bash
set -e

# Source helper functions (available via init template)
source /tmp/lxc-helpers.sh 2>/dev/null || true

APP="Proxmox Backup Server"
APP_NAME="proxmox-backup-server"

echo "Starting $APP configuration..."

# Install Proxmox Backup Server repository and packages
echo "Setting up Proxmox repository..."

# Add Proxmox repository GPG key
if command -v setup_apt_repo >/dev/null 2>&1; then
    setup_apt_repo "proxmox-backup" \
        "https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg" \
        "deb [signed-by=/etc/apt/keyrings/proxmox-backup.gpg] http://download.proxmox.com/debian/pbs bookworm pbs-no-subscription"
else
    # Fallback to manual setup with proper signed-by approach
    mkdir -p /etc/apt/keyrings
    curl -fsSL "https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg" -o "/etc/apt/keyrings/proxmox-backup.gpg"
    cat <<EOF >/etc/apt/sources.list.d/proxmox-backup.list
deb [signed-by=/etc/apt/keyrings/proxmox-backup.gpg] http://download.proxmox.com/debian/pbs bookworm pbs-no-subscription
EOF
    apt-get update
fi

echo "Installing Proxmox Backup Server packages..."
export DEBIAN_FRONTEND=noninteractive
export IFUPDOWN2_NO_IFRELOAD=1

if command -v ensure_packages >/dev/null 2>&1; then
    ensure_packages proxmox-backup-server
else
    apt-get install -y proxmox-backup-server
fi

echo "Configuring $APP..."

# Ensure backup storage directories exist with proper permissions
if command -v ensure_directory >/dev/null 2>&1; then
    ensure_directory "/tank/backups" "backup:backup" "755"
    ensure_directory "/mnt/snapshots" "root:root" "755"
else
    mkdir -p "/tank/backups" "/mnt/snapshots"
    chown backup:backup "/tank/backups" 2>/dev/null || true
fi

# Set up basic PBS configuration if needed
PBS_CONFIG_DIR="/etc/proxmox-backup"
if [ ! -f "$PBS_CONFIG_DIR/node.cfg" ]; then
    echo "Creating initial PBS node configuration..."
    mkdir -p "$PBS_CONFIG_DIR"
    
    # Get container IP
    LOCAL_IP=""
    if command -v get_container_ip >/dev/null 2>&1; then
        LOCAL_IP=$(get_container_ip)
    else
        LOCAL_IP=$(hostname -I | awk '{print $1}' || echo "192.168.6.200")
    fi
    
    cat <<EOF > "$PBS_CONFIG_DIR/node.cfg"
# Proxmox Backup Server Node Configuration
# Generated by LXC setup script

[general]
# Node name
node = pbs

# Listen address
listen = 0.0.0.0:8007

# Default datastore location
default-store = /tank/backups
EOF
fi

# Ensure PBS services are enabled and running
echo "Starting $APP services..."
if command -v ensure_service_running >/dev/null 2>&1; then
    ensure_service_running "proxmox-backup"
    ensure_service_running "proxmox-backup-proxy"
else
    systemctl daemon-reload
    systemctl enable proxmox-backup proxmox-backup-proxy
    systemctl start proxmox-backup proxmox-backup-proxy
fi

# Show access information
LOCAL_IP=$(hostname -I | awk '{print $1}' || echo "192.168.6.200")
echo "$APP installed successfully!"
echo "Access URL: http://${LOCAL_IP}:8007"
echo "Default login: root (use PVE host root credentials)"
echo ""
echo "Storage locations:"
echo "  - Primary backup storage: /tank/backups"
echo "  - Snapshot access: /mnt/snapshots (read-only)"

# Show service status
sleep 3
echo "Service status:"
systemctl status proxmox-backup --no-pager --lines=5 || true
systemctl status proxmox-backup-proxy --no-pager --lines=5 || true
